# 정책 일관성 평가
# 국회의원 발의법률안
# https://open.assembly.go.kr/portal/data/service/selectAPIServicePage.do/OK7XM1000938DS17215#
# 요청주소 : https://open.assembly.go.kr/portal/openapi/nzmimeepazxkubdpn

// API에서 법률안 데이터 가져오기
async function fetchBillsProposedByMember(memberName, apiKey) {
    const url = "https://open.assembly.go.kr/portal/openapi/nzmimeepazxkubdpn";
    const params = new URLSearchParams({
        Key: apiKey,
        Type: "json",
        pIndex: 1,
        pSize: 100,
        PROPOSER: memberName,
        AGE: "22"  // 국회 대수
    });

    try {
        const response = await fetch(`${url}?${params.toString()}`);
        const data = await response.json();

        let bills = [];
        if (data.nzmimeepazxkubdpn[0].head[0].RESULT.CODE === "INFO-000") {
            bills = data.nzmimeepazxkubdpn[1].row.map(item => ({
                bill_id: item.BILL_ID,
                bill_name: item.BILL_NAME,
                propose_date: item.PROPOSE_DT,
                result: item.PROC_RESULT,
                detail_link: item.DETAIL_LINK,
                proposer: item.RST_PROPOSER
            }));
        }
        return bills;
    } catch (error) {
        console.error("API fetch error:", error);
        return [];
    }
}

// 타임라인 데이터 화면에 출력하기
function displayTimeline(bills) {
    const timelineContainer = document.getElementById("timeline");
    timelineContainer.innerHTML = "";  // 기존 내용을 초기화

    bills.forEach(entry => {
        const entryDiv = document.createElement("div");
        entryDiv.className = "timeline-entry";
        entryDiv.innerHTML = `
            <h3>${entry.bill_name}</h3>
            <p>제안일: ${entry.propose_date}</p>
            <p>결과: ${entry.result}</p>
            <p>발의자: ${entry.proposer}</p>
            <a href="${entry.detail_link}" target="_blank">상세보기</a>
        `;
        timelineContainer.appendChild(entryDiv);
    });
}

// API 호출 및 데이터 표시
const apiKey = "your_api_key_here";  // API 키 입력
const memberName = "곽상언";  // 국회의원 이름 입력

// 페이지 로드 시 데이터 가져와서 표시
fetchBillsProposedByMember(memberName, apiKey).then(bills => {
    displayTimeline(bills);
});
